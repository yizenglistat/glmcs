% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulate.R
\name{simulate_data}
\alias{simulate_data}
\title{Simulate Data for Generalized Linear, or Cox Models}
\usage{
simulate_data(
  n = 500,
  p = 10,
  intercept = -1,
  dispersion = 9,
  family = gaussian(),
  settings = "example-1",
  cor = 0.9,
  censoring_rate = 0.3,
  seed = NULL
)
}
\arguments{
\item{n}{Integer. Number of observations to generate (default: 500).}

\item{p}{Integer. Number of predictors to generate (default: 10).}

\item{intercept}{Numeric. Intercept term (default: -1, ignored for Cox models).}

\item{dispersion}{Numeric. Dispersion parameter for two-parameter GLMs (default: 9).}

\item{family}{Family object or "cox" string. The family object provides the link function.}

\item{settings}{Character. Correlation structure (default: "example-1").}

\item{cor}{Numeric. Correlation coefficient for "example-1" setting (default: 0.9).}

\item{censoring_rate}{Numeric. Censoring rate for survival data (default: 0.3).}

\item{seed}{Integer. Random seed for reproducibility (default: NULL).}
}
\value{
A list containing:
\itemize{
\item X: Design matrix (n Ã— p)
\item y: Response variable (vector for GLMs, 2-column matrix for Cox)
\item intercept: Intercept used in data generation
\item dispersion: Dispersion parameter used in data generation
\item family: Family object or "cox" string
\item theta: True coefficient vector
\item settings: Correlation setting used
}
}
\description{
Generate synthetic data with controlled correlation structure for benchmarking
variable selection methods.
}
\details{
Generates synthetic datasets with specific correlation structures:
\itemize{
\item "example-1": Two highly correlated predictors, with only one truly associated
with the response.
\item "example-2": Block correlation structure with 5 predictors in two correlated groups.
}
}
\examples{
# Generate Gaussian data with correlated predictors
sim_data <- simulate_data(n=200, p=10, family=gaussian())

# Generate binary data for logistic regression
sim_data <- simulate_data(n=500, p=5, family=binomial(), settings="example-2")

# Generate survival data for Cox model with 40\% censoring
sim_data <- simulate_data(n=300, p=10, family="cox", censoring_rate=0.4)

}
