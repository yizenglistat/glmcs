% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Rinternal.R
\name{univariate_loglik_cox}
\alias{univariate_loglik_cox}
\title{Compute Log-Likelihood for Univariate Cox Model}
\arguments{
\item{x}{Numeric vector of length \code{n}: covariate values for each individual.}

\item{y}{Numeric matrix of shape \code{n Ã— 2}, where:
- \code{y[,1]} contains event/censoring times
- \code{y[,2]} contains event status (1 = event, 0 = censored)}

\item{offset}{Numeric vector of length \code{n}, or scalar. Optional offset in the linear predictor.}

\item{theta}{Numeric scalar: the coefficient to evaluate the log-likelihood at.}

\item{ties}{Character string: tie-handling method. Must be either \code{"breslow"} or \code{"efron"}.}
}
\value{
Numeric scalar: the partial log-likelihood value.
}
\description{
Computes the partial log-likelihood for a univariate Cox proportional hazards model.
Handles ties using either the Breslow or Efron approximation.
}
\details{
The function computes the linear predictor as: \code{lp = offset + theta * x}.
The partial log-likelihood is calculated using either the Breslow or Efron method
for handling tied event times.
}
\examples{
\dontrun{
x <- c(1, 2, 3, 4)
y <- matrix(c(4,1, 1,1, 3,0, 2,1), ncol = 2, byrow = TRUE)
univariate_loglik_cox(x, y, offset = 0, theta = 0.5, ties = "efron")
}
}
