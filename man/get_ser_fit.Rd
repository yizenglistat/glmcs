% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/internal.R
\name{get_ser_fit}
\alias{get_ser_fit}
\title{Fit Single-Effect Regression (SER) Across Predictors}
\arguments{
\item{X}{NumericMatrix (n Ã— p). Predictor matrix with:
n = number of observations
p = number of predictors}

\item{y}{Response variable:
- For GLMs: numeric vector of length n
- For Cox: matrix with 2 columns (time, status)}

\item{family}{Model family specification:
- String: "cox", "gaussian", "binomial", "poisson", etc.
- List with element "family" or "name" containing family string}

\item{offset}{NumericVector. Known offset term for the linear predictor:
- Length 1: Same offset applied to all observations
- Length n: Observation-specific offsets}

\item{standardize}{Logical. Whether to standardize predictors before fitting (default: TRUE).}

\item{ties}{String. Method for handling ties in Cox regression:
- "efron": Efron approximation (default, more accurate)
- "breslow": Breslow approximation (faster)}
}
\value{
DataFrame with columns:
\itemize{
\item theta: Estimated coefficient for each predictor
\item se: Standard error of the coefficient estimate
\item p_value: Two-sided p-value for coefficient significance
\item logLik: Log-likelihood of the model
\item BIC: Bayesian Information Criterion
\item delta_BIC: Difference in BIC compared to minimum BIC (stabilized)
\item bf: Bayes factor derived from delta_BIC
\item posterior: Posterior probability for variable importance
}
}
\description{
Performs single-effect regression for each predictor variable against the response,
supporting both Generalized Linear Models (GLMs) and Cox Proportional Hazards models.
}
\details{
For each predictor, this function:
\enumerate{
\item Fits a model with just that predictor (and optional offset)
\item Computes coefficient estimate, standard error, and p-value
\item Calculates model fit statistics (log-likelihood, BIC)
\item Derives Bayes factors and posterior probabilities
}

All models are compared against a null model with only the offset.
}
\examples{
\dontrun{
# Example for Gaussian regression
X <- matrix(rnorm(100 * 10), 100, 10)
y <- rnorm(100)
results <- get_ser_fit(X, y, "gaussian", rep(0, 100))

# Example for Cox regression
time <- rexp(100)
status <- rbinom(100, 1, 0.5)
y_cox <- cbind(time, status)
results_cox <- get_ser_fit(X, y_cox, "cox", rep(0, 100), ties = "efron")
}
}
