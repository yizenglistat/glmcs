% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Rinternal.R
\name{univariate_irls_glm}
\alias{univariate_irls_glm}
\title{Compute Truncated‐L1 IRLS Estimate for Univariate GLM}
\arguments{
\item{x}{Numeric vector of covariates (length n).}

\item{y}{Numeric response vector (length n).}

\item{family}{A stats::family object (e.g. \code{gaussian()},
\code{binomial()}, \code{poisson()}).}

\item{offset}{Numeric scalar or vector (length n) giving the linear predictor offset.}

\item{lambda}{Numeric penalty weight; if ≤0 defaults to \eqn{\sqrt{2\log(n)/n}}.}

\item{tau}{Numeric truncation parameter; if ≤0 uses grid \{1/n,…,5/n\} for n≤500 and 1/n otherwise.}

\item{max_iter}{Integer. Maximum number of IRLS iterations.}

\item{tol}{Numeric convergence tolerance for θ.}
}
\value{
Numeric scalar: the estimated coefficient \eqn{\hat\theta}.
}
\description{
Fits a single‐covariate GLM using IRLS with a truncated‐L1 penalty.
Solves:
\deqn{\min_\theta\;-\ell(\theta) \;+\;\lambda\,\min\bigl(1,|\theta|/\tau\bigr)}
via iteratively reweighted least squares, with a closed‐form capped‐L1 update each step.
}
\examples{
\dontrun{
set.seed(42)
n <- 100
x <- rnorm(n)
# Gaussian example
y <- 2*x + rnorm(n)
univariate_irls_glm(x, y, gaussian(), offset=0,
                    lambda=0, tau=0, max_iter=25, tol=1e-8)
}
}
