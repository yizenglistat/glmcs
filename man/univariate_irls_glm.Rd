% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{univariate_irls_glm}
\alias{univariate_irls_glm}
\title{Fit a Univariate GLM via IRLS}
\usage{
univariate_irls_glm(
  x,
  y,
  family = gaussian(),
  offset = 0,
  dispersion = 1,
  max_iter = 25,
  tol = 1e-08
)
}
\arguments{
\item{x}{Numeric vector of predictor values.}

\item{y}{Numeric vector of response values.}

\item{family}{A GLM family object (e.g., \code{gaussian()}, \code{binomial()},
\code{poisson()}, etc.). Must inherit from class \code{"family"}.}

\item{offset}{Numeric scalar or vector of known offsets (default: \code{0}).}

\item{dispersion}{Numeric scalar dispersion parameter (default: \code{1}).
Used for two-parameter families (Gaussian, Gamma, inverse Gaussian).}

\item{max_iter}{Integer. Maximum number of IRLS iterations (default: \code{25}).}

\item{tol}{Numeric. Convergence tolerance on the change in slope (default: \code{1e-8}).}
}
\value{
A numeric scalar: the estimated slope coefficient \eqn{\beta}.
}
\description{
Efficiently fits a univariate generalized linear model (GLM) for a single
predictor using iteratively reweighted least squares (IRLS), with a fixed
offset and known dispersion parameter. Returns only the slope estimate.
}
\details{
This function solves for the slope coefficient \eqn{\beta} in the model
\deqn{\eta = \text{offset} + \beta\,x,\quad \mu = g^{-1}(\eta),}
where \eqn{g} is the link function of the specified family.  At each IRLS
iteration, it constructs the working response
\deqn{z = \eta + (y - \mu) / g'(\eta)}, computes weights
\deqn{W = \{g'(\eta)\}^2 / \bigl[\mathrm{Var}(\mu)\times\phi\bigr]}, and
then updates \eqn{\beta} by weighted least squares:
\deqn{\beta \leftarrow \frac{\sum_i W_i\,x_i\,(z_i - \text{offset}_i)}
                      {\sum_i W_i\,x_i^2}.}
Iteration stops when the absolute change in \eqn{\beta} is below \code{tol},
or when \code{max_iter} is reached.  If a non‐positive or non‐finite
denominator arises, a warning is issued and the current estimate is returned.
}
\examples{
\dontrun{
# Gaussian example
set.seed(0)
x <- rnorm(100)
y <- 3*x + rnorm(100)
univariate_irls_glm(x, y, family = gaussian(), offset = 0)

# Logistic example
x <- rnorm(200)
p <- 1 / (1 + exp(-x))
y <- rbinom(200, 1, p)
univariate_irls_glm(x, y, family = binomial(link = "logit"), offset = 0)

# Poisson example
x <- rnorm(150)
lambda <- exp(1 + 2*x)
y <- rpois(150, lambda)
univariate_irls_glm(x, y, family = poisson(link = "log"), offset = 0)
}
}
