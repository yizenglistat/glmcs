% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Rinternal.R
\name{univariate_loglik}
\alias{univariate_loglik}
\title{Compute Univariate Log-Likelihood for GLM or Cox Model}
\arguments{
\item{x}{Numeric vector of length n: covariate values.}

\item{y}{For GLMs: numeric vector of length n; for Cox: numeric matrix with
two columns (time, status) and n rows.}

\item{family}{A GLM family object (e.g. \code{gaussian()}, \code{binomial()},
\code{poisson()}) or a Cox family list with element \code{family="cox"}.}

\item{theta}{Numeric scalar: coefficient at which to evaluate the log-likelihood.}

\item{offset}{Numeric scalar or vector of length n: offset in the linear predictor.}

\item{intercept}{Numeric scalar: intercept term in the linear predictor (for GLM only).
Default is 0.}

\item{ties}{Character string: tie-handling method for Cox partial likelihood;
one of \code{"efron"} or \code{"breslow"}.}
}
\value{
A numeric scalar giving the log-likelihood of the univariate fit.
}
\description{
Calculates the log-likelihood of a single covariate effect under either a
generalized linear model (GLM) family or a Cox proportional hazards model.
}
\examples{
\dontrun{
# Gaussian example
x <- rnorm(100)
y <- 1.5 + 2 * x + rnorm(100)
univariate_loglik(x, y, family = gaussian(), theta = 2, intercept = 1.5)

# Binomial example
x <- rnorm(200)
eta <- -1 + 1.5 * x
p <- plogis(eta)
y <- rbinom(200, 1, p)
univariate_loglik(x, y, family = binomial(link = "logit"),
                  theta = 1.5, intercept = -1)

# Cox example (note: intercept not used in Cox models)
x <- rnorm(50)
times <- rexp(50)
status <- rbinom(50, 1, 0.5)
ymat <- cbind(times, status)
univariate_loglik(x, ymat, family = list(family = "cox"),
                  theta = 0.5, offset = 0, ties = "efron")
}
}
