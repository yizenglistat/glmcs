% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R, R/utils.R
\name{univariate_irls_cox}
\alias{univariate_irls_cox}
\title{Fit Univariate Cox via Newton–Raphson (IRLS)}
\usage{
univariate_irls_cox(
  x,
  y,
  offset = numeric(0),
  ties = "efron",
  max_iter = 25,
  tol = 1e-08
)

univariate_irls_cox(
  x,
  y,
  offset = numeric(0),
  ties = "efron",
  max_iter = 25,
  tol = 1e-08
)
}
\arguments{
\item{x}{Numeric vector of covariate values}

\item{y}{Matrix with 2 columns (time, status)}

\item{offset}{Numeric vector or scalar offset}

\item{ties}{Method for handling ties ("breslow" or "efron")}

\item{max_iter}{Maximum iterations}

\item{tol}{Convergence tolerance}
}
\value{
A single numeric value: the estimated coefficient \eqn{\hat\theta}.

Estimated coefficient
}
\description{
Finds the MLE of the coefficient in a univariate Cox model by iteratively
maximizing the partial likelihood using Newton–Raphson.
}
\examples{
\dontrun{
n <- 100
x <- rnorm(n)
y <- cbind(rexp(n, rate=exp(0.5*x)), rbinom(n,1,0.8))
theta_hat <- univariate_irls_cox(x, y, offset = 0, ties = "efron")
}
}
\seealso{
\code{\link{univariate_loglik_cox}}
}
