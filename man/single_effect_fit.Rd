% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/core.R
\name{single_effect_fit}
\alias{single_effect_fit}
\title{Fit Single-Effect Regression Across All Predictors}
\usage{
single_effect_fit(
  X,
  y,
  family,
  offset,
  standardize = TRUE,
  ties = "efron",
  null_threshold = 1e-06
)
}
\arguments{
\item{X}{Numeric matrix (n × p) of predictors.}

\item{y}{Response:
\itemize{
\item Numeric vector of length n, for GLMs.
\item Numeric matrix (n × 2) with columns \code{time,status}, for Cox.
}}

\item{family}{A GLM family object (e.g. \code{gaussian()}, \code{binomial()}, \code{poisson()}, …)
or a list with \code{family = "cox"} for Cox regression.}

\item{offset}{Numeric scalar or vector of length n.  Known offset term.}

\item{standardize}{Logical; if \code{TRUE}, center and scale each column of \code{X}
before fitting (default: \code{TRUE}).}

\item{ties}{Character; tie-handling method for Cox IRLS (\code{"efron"} or \code{"breslow"}),
ignored for GLMs (default: \code{"efron"}).}

\item{null_threshold}{Numeric; posterior probabilities or coefficient estimates
below this threshold are set to zero (default: \code{1e-6}).}
}
\value{
A list with components:
\describe{
\item{\code{loglik}}{Numeric vector of length p; log-likelihood for each univariate fit.}
\item{\code{bic}}{Numeric vector of length p; BIC for each fit.}
\item{\code{bic_diff}}{Numeric vector; BIC difference from null model, shifted so min = 0.}
\item{\code{bf}}{Numeric vector; Bayes factors \eqn{\exp(-½\,\Delta{\rm BIC})}.}
\item{\code{pmp}}{Numeric vector; posterior model probabilities (sum to 1).}
\item{\code{theta}}{Numeric vector of MAP coefficient estimates (thresholded).}
\item{\code{expect_theta}}{Numeric vector; PMP-weighted expectation of θ.}
\item{\code{expect_variance}}{Numeric scalar; PMP-weighted average of θ² across predictors.}
}
}
\description{
For each column of the design matrix \code{X}, fits a univariate model to
the response \code{y} (using \code{\link{univarite_fit}}), computes BIC
differences relative to a null model, converts these into Bayes factors
and posterior model probabilities (PMP), and returns both the MAP estimates
and the PMP-weighted expectations.
}
\examples{
\dontrun{
# Gaussian single-effect fit
X <- matrix(rnorm(200*5), 200, 5)
y <- rnorm(200)
se <- single_effect_fit(X, y, family = gaussian())

# Logistic single-effect fit
eta <- X[,1] * 1.2
p <- 1/(1+exp(-eta))
y_bin <- rbinom(200, 1, p)
se_bin <- single_effect_fit(X, y_bin, family = binomial())
}

}
