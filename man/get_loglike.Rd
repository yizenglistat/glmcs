% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/internal.R
\name{get_loglike}
\alias{get_loglike}
\title{Compute Log-Likelihood for LASER Model}
\arguments{
\item{X}{NumericMatrix (n × p) predictor matrix, where:
n = number of observations
p = number of predictors}

\item{y}{Response variable:
- For GLMs: numeric vector of length n
- For Cox: matrix with 2 columns (time, status), where status = 1 indicates event}

\item{family}{Model family specification:
- String: "cox", "gaussian", "binomial", "poisson", "Gamma", or "inverse.gaussian"
- List with element "family" or "name" containing one of the above strings}

\item{theta}{Matrix (p × L) estimated coefficient matrix, where:
p = number of predictors
L = number of latent dimensions}

\item{intercept}{Numeric scalar. Estimated intercept term in the model.}

\item{dispersion}{Numeric scalar. Estimated dispersion parameter (only used for certain GLMs).
Defaults to 1.0.}
}
\value{
Numeric scalar: total log-likelihood of the model.
}
\description{
Computes the model log-likelihood for various statistical models supported by LASER.
Handles both Generalized Linear Models (GLMs) and Cox Proportional Hazards models.
For GLMs, supports gaussian, binomial, poisson, gamma, and inverse gaussian families.
}
\details{
The linear predictor is computed as: intercept + X * sum(theta, 1), where
sum(theta, 1) represents the sum across the latent dimensions (column-wise).
For each family, the appropriate link function and log-likelihood formula are applied.
}
\examples{
\dontrun{
# Example for gaussian model with 100 observations, 10 predictors, 2 latent dimensions
X <- matrix(rnorm(100 * 10), 100, 10)
y <- rnorm(100)
theta <- matrix(rnorm(10 * 2), 10, 2)
get_loglike(X, y, "gaussian", theta, 0.5, 1.2)
}
}
